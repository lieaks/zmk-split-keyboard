/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
	macros {
	e_aigu: e_aigu {
	label = "e_aigu";
	compatible = "zmk,behavior-macro";
	#binding-cells = <0>;
	bindings
	= <&macro_press &kp RALT>
	, <&macro_tap &kp E>
	, <&macro_release &kp RALT>
	, <&macro_tap &kp E>;
	};		
	e_grave: e_grave {
	label = "e_grave";
	compatible = "zmk,behavior-macro";
	#binding-cells = <0>;
	bindings
	= <&macro_press &kp RALT>
	, <&macro_tap &kp GRAVE>
	, <&macro_release &kp RALT>
	, <&macro_tap &kp E>;
	};
	e_circ: e_circ {
	label = "e_circ";
	compatible = "zmk,behavior-macro";
	#binding-cells = <0>;
	bindings
	= <&macro_press &kp RALT>
	, <&macro_tap &kp I>
	, <&macro_release &kp RALT>
	, <&macro_tap &kp E>;
	};
	a_grave: a_grave {
	label = "a_grave";
	compatible = "zmk,behavior-macro";
	#binding-cells = <0>;
	bindings
	= <&macro_press &kp RALT>
	, <&macro_tap &kp GRAVE>
	, <&macro_release &kp RALT>
	, <&macro_tap &kp A>;
	};
	u_grave: u_grave {
	label = "u_grave";
	compatible = "zmk,behavior-macro";
	#binding-cells = <0>;
	bindings
	= <&macro_press &kp RALT>
	, <&macro_tap &kp GRAVE>
	, <&macro_release &kp RALT>
	, <&macro_tap &kp U>;
	};
	o_circ: o_circ {
	label = "o_circ";
	compatible = "zmk,behavior-macro";
	#binding-cells = <0>;
	bindings
	= <&macro_press &kp RALT>
	, <&macro_tap &kp I>
	, <&macro_release &kp RALT>
	, <&macro_tap &kp O>;
	};
	i_circ: i_circ {
	label = "i_circ";
	compatible = "zmk,behavior-macro";
	#binding-cells = <0>;
	bindings
	= <&macro_press &kp RALT>
	, <&macro_tap &kp I>
	, <&macro_release &kp RALT>
	, <&macro_tap &kp I
	>;
	};
     };
     
	combos {
	compatible = "zmk,combos";
	combo_e_aigu {
	timeout-ms = <30>;
	key-positions = <17 18>;
	bindings = <&e_aigu>;
	};
	
	combo_e_grave {
	timeout-ms = <30>;
	key-positions = <16 17>;
	bindings = <&e_grave>;
	};
	combo_e_circ {
	timeout-ms = <50>;
	key-positions = <16 17 18>;
	bindings = <&e_circ>;
	};
	combo_a_grave {
	timeout-ms = <30>;
	key-positions = <26 27>;
	bindings = <&a_grave>;
	};
	combo_u_grave {
	timeout-ms = <30>;
	key-positions = <6 7>;
	bindings = <&u_grave>;
	};
	combo_o_circ {
	timeout-ms = <50>;
	key-positions = <17 18 19>;
	bindings = <&o_circ>;
	};
	combo_i_circ {
	timeout-ms = <50>;
	key-positions = <10 11 12>;
	bindings = <&i_circ>;
	};
	combo_capslock {
	timeout-ms = <30>;
	key-positions = <2 3>;
	bindings = <&kp CAPS>;
	};
	combo_tab {
	timeout-ms = <30>;
	key-positions = <10 11>;
	bindings = <&kp EXCL>;
	};
	combo_nav {
	timeout-ms = <30>;
	key-positions = <30 33>;
	bindings = <&key_repeat>;
	};
	combo_enter {
	timeout-ms = <30>;
	key-positions = <18 19>;
	bindings = <&key_repeat>;
	};
    };

	behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
	    
        };
	td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
	gqt: global-quick-tap {
    	    compatible = "zmk,behavior-hold-tap";
   	    label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <160>;
            #global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
    };

        keymap {
                compatible = "zmk,keymap";
                
       		default_layer {
		bindings = <
		&kp Y &kp C &kp L &kp M &kp K 						&kp Z &kp F &kp U &kp COMMA &kp SQT
		&gqt LCTRL I &gqt LSHIFT S &gqt LALT R &gqt LGUI T &lt 3 G 	  	&kp P &gqt RGUI N &gqt RALT E &gqt RSHIFT A &gqt RCTRL O
		&kp Q &kp V &lt 3 W &lt 3 D &kp J				        &kp B &kp H  &kp SLASH &td EXCL DOT &kp X
          				&lt 2 ESC &kp BKSP			&kp SPC &lt 1 ENTER
		>;
		};

       		left_layer {
		bindings = <
		&kp GRAVE  &kp AT    &kp HASH   &kp DLLR    &kp PRCNT			&kp CARET &kp AMPS &kp ASTRK &td COLON SEMI &kp COLON 
		&gqt LCTRL TAB  &gqt LSHIFT EQUAL  &gqt LALT BSLH  &gqt LGUI PIPE  &kp LS(MINUS) 	&kp EXCL &gqt RGUI LS(MINUS) &gqt RALT EXCL &gqt RSHIFT COLON &gqt RCTRL ENTER
		&kp TILDE    &hm RBKT LBKT &hm RBRC LBRC &hm RPRN LPRN  &none 	&none &kp RPRN &hm RALT RBRC &kp RBKT  &none
					  &lt 2 ESC &kp BKSP 				&kp SPC &lt 1 ENTER
		>;
		};
		
		right_layer {
		bindings = <
		&kp PSCRN &kp C_PP &kp C_PREV  &kp C_NEXT  &kp LS(MINUS)    			&kp SLASH  &kp N7 &kp N8 &kp N9 &kp MINUS	
		&gqt LCTRL TAB  &gqt LSHIFT TAB   &gqt LALT C_VOL_DN  &hm LGUI C_VOL_UP  &kp LS(EQUAL) 		&kp EQUAL &gqt RGUI N4  &gqt RALT N5  &gqt RSHIFT N6  &gqt RCTRL LS(EQUAL)			
		&bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 		  	&kp ASTRK &kp N1 &kp N2 &kp N3  &kp DOT
					 &lt 2 ESC &kp BKSP 				&kp SPC &kp N0
		>;
		};	
		
		tri_layer {
		bindings = <
		&kp F1  &kp F2    &kp F3    &kp F4  &kp F5 				&kp PAGE_UP &kp HOME  &none &kp PSCRN &kp DEL
		&kp F6 &kp F7 &kp F8 &kp F9 &kp F10  					&kp LEFT &kp DOWN  &kp UP &kp RIGHT &none 
		&kp F11  &kp F12  &none  &none  &none   				&kp PAGE_DOWN  &kp END  &none  &none &none   
					 &to 0 &to 0  					&key_repeat &key_repeat 
		>;
		};	
        
	};
};
